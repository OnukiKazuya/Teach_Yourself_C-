全体の流れ
********************************************************************************
1. git init   ->    git管理者が作成される（=.gitディレクトリ（隠しファイル ls -aで確認できる）)
2. 一応 ls -a で.gitディレクトリが存在することを確認
3. いろいろ入れたいものを入れ込む
4. 都度 git status で状況を把握する癖を
5. git add して、ステージングエリアに変更情報を登録（=コミットの準備をしている者たちの控室）
6. 都度 git status で状況を把握する癖を
7. git commit を押して、コメント（1行目要約、2行目空白, 3行目変更理由）
8. 都度git statusで状況把握する癖を
9. git log コミットの履歴をたどる (--oneline or -p)
10. リモートリポジトリ（=github）に行き、作ったディレクトリ名と同じ名前のリポジトリを作成
11. そのリポジトリのリンクLをコピー
12. そのコピーされたリンクをもとにgit remote add origin L(originという名前でエイリアス化)
       としてローカルリポジトリをリモートリポジトリとして登録
13. git push origin master( or master 以外のブランチ） 
	- 登録したGitHubリポジトリ（=origin）のmasterブランチへpush

★14. 13でマージエラーが出たら、これを打て
	- git fetch && git merge --allow-unrelated-histories origin/masterを
**********************************************************************************

ファイルを変更したら
git add ステージングエリアに追加
	- ステージングエリア　＝コミットするファイルを選択するエリア
	- gitのお作法＝1作業・1コミットといわれている
	- なので1作業ずつコミットするための控室として、ステージングエリアがある。
	- git add [ファイル名] = 特定のファイルをステージングエリアに登録
	- git add . = 全てのファイルをステージングエリアに登録

git commit -v(どこが変更されたかを確認） ローカルリポジトリに追加
	- 変更事にコミットすることでリポジトリ内に時系列で記録することができる
	- 一つの作業ごとに1コミット どの作業を何のためにしたのか、すぐ振り返れるようにするために
	- わかりやすいコミットメッセージを書こう
		- 1行目 : 変更内容の要約
		- 2行目：空行
		- 3行目：変更した理由

git status リポジトリの状況を確認（＝最終git commitした分から変更した分）
	- 赤色のファイル名 　= ファイルの中身が変更され、ステージングエリアにいないこと
	- 緑色のファイル名　＝　ステージングエリアにいるということ
	- origin/master = remote repogitory(git hubにあるリポジトリのコト）
	- Your branch is ahead of "origin/master" by 4 commits.
		- = 元の最終git commitした分から4つ新しくコミットされているよ

git log コミットされたことを確認し、【コミットの履歴をたどれる】
	-出力例： commit ハッシュ値
		- ハッシュ値＝このコミットに戻したいというときに指定するキー
	- git log --oneline
		- git のコミットのログを1行で表示
	- git log -p ファイル
		- ファイルの変更差分（何のファイルをどのように変更したかを確認）
	- jキーを押下すると、下に移る。
	- kキーを押下すると、上に移る。


git diff ファイルの変更差分（git addする前に確認）
git diff HEAD ステージングエリアとの変更差分を確認（git commitする前にこれでよいのかを確認）
get rm 削除したファイルをステージングエリアに追加
	- コミットしてしまったファイルを管理から外す
	- git rm [ファイル名] ファイルごとGitの管理から削除
	- git rm -r [ディレクトリ名] ディレクトリも一緒に削除
	- git rm --cached ファイルは残してgitの管理から外す（!つねに無視されるよう.gitignoreに追記しろ）

git push
	- リモートリポジトリ（= git hubのこと）

git remote add origin https://..../~.git
	- ローカルリポジトリをリモートリポジトリに登録
	- 今後はoriginという名前でGitHubリポジトリにアクセスできるよ
		- いわゆるエイリアス化をしている！
	- origin というのはリモートリポジトリにデフォルトでつけるときの名前のこと
	- = リモートリポジトリを登録するときはoriginという名前をつけるんだなと覚えておいて

git push 
	- git push origin master
		- 登録したGitHubリポジトリ（=origin)のmasterブランチにpush
	- git push origin feature
		- 登録したGitHubリポジトリ（=origin)のmaster以外のブランチへpush
---
.gitignoreファイルに指定することで、ファイルを管理しないファイルをGitの管理から外すことができる
.gitignoreファイルの書き方
	- #から始める行はコメント
	- /root ルートディレクトリは頭に/をつけることでできる
	- dir/ ディレクトリはお尻に/をつけることでできる

		
